GODOT

Project -> Project Settings -> Input Map
    -> add any new name
    -> add any amount of inputs for name

Project -> Project Settings -> Display -> Window
    -> width/height sets camera width/height
    -> test width/height sets window size

Project -> Project Settings -> Display -> 2D
    -> Use Gpu Pixel Snap -> On


# If >>Font oversampling does not work in "Viewport"<<... error
Project -> Project Settings -> Rendering -> Quality
    -> Dynamic Fonts -> Use Oversampling

layer vs mask
layer -> what layer does the object exist in
mask -> what layers does it check against for the collision

Scene -> New Inherited Scene
    -> create "child-scene"

SHORTCUTS

ctrl + f1-4 -> switch between 2d/3d/script/assetlib

ctrl + shift + o -> quick open scene

GDSCRIPT:
f1 -> open manual

func _process(delta):
# delta -> number of seconds passed since last frame

KinematicBody2D
move_and_slide(Vector2(x, y)) -> automatically takes delta into account
Vector2.ZERO == Vector2(0, 0)

lerp() -> frame rate dependand

# creates field in ui where user can select possibilities
enum -> syntax: enum 'name' { possibilities... }
# transfers enum value to variable
export -> syntax export('enum') var 'variable'

match -> switch



CODE

---fix for jerky camera
I found a fix for this, i was getting the same issues.
In the gamecamera.gd file.

Added these two variables.
var cameraPositionX : int

var cameraPositionY : int


Then inside the _process(delta) function

# change for pixel based movement smooth,

# Added cameraPosition Variables, and replaced the line below to do each co-ord seperatly

# global_position = lerp(targetPosition, global_position, pow(2, -15 * delta))

# Thanks to: https://www.youtube.com/watch?v=Wbw5EmYDtWI

cameraPositionX = int(lerp(targetPosition.x, global_position.x, pow(2, -15 * delta)))

cameraPositionY = int(lerp(targetPosition.y, global_position.y, pow(2, -15 * delta)))

global_position = Vector2(cameraPositionX,cameraPositionY)
---
